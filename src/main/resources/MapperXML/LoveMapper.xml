<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isco.Blog.Mapper.LoveMapper">
	<resultMap id="BaseResultMap" type="com.isco.Blog.POJO.Love">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="blog_id" property="blogId" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
	</resultMap>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from love
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.isco.Blog.POJO.Love"
		useGeneratedKeys="true" keyProperty="id">
		insert into love (blog_id, user_id)
		values (#{blogId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER})
	</insert>
	<update id="updateByPrimaryKey"
		parameterType="com.isco.Blog.POJO.Love">
		update love
		set blog_id = #{blogId,jdbcType=INTEGER},
		user_id = #{userId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select id, blog_id, user_id
		from love
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, blog_id, user_id
		from love
	</select>

	<select id="selectByUserIdAndBlogId" resultMap="BaseResultMap">
		select id from love
		where user_id=#{userId} and blog_id=#{blogId}
	</select>
</mapper>