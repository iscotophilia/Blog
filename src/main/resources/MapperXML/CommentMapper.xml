<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isco.Blog.Mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.isco.Blog.POJO.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="love_num" property="loveNum" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="blog_id" property="blogId" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.isco.Blog.POJO.Comment" useGeneratedKeys="true" keyProperty="id" >
    insert into comment (comment, user_id, parent_id, 
      love_num, time, blog_id
      )
    values (#{comment,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, 
      #{loveNum,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{blogId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="append" parameterType="com.isco.Blog.POJO.Comment" useGeneratedKeys="true" keyProperty="id" >
    insert into comment (comment, user_id, parent_id, 
      love_num, time, blog_id
      )
    values (#{comment,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, 
      #{loveNum,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{blogId,jdbcType=INTEGER}
      )
    update comment
    set 
      reply_num=reply_num+1
    where id=#{parentId,jdbcType=INTEGER}
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.isco.Blog.POJO.Comment" >
    update comment
    set comment = #{comment,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      love_num = #{loveNum,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      blog_id = #{blogId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, comment, user_id, parent_id, love_num, time, blog_id, reply_num
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, comment, user_id, parent_id, love_num, time, blog_id, reply_num
    from comment
  </select>
    <select id="selectAllByUserID" resultMap="BaseResultMap"  parameterType="java.lang.Integer">
    select id, comment, user_id, parent_id, love_num, time, blog_id, reply_num
    from comment 
    where user_id = #{userID,jdbcType=INTEGER}
  </select>
      <select id="selectAllByBlogID" resultMap="BaseResultMap"  parameterType="java.lang.Integer">
    select id, comment, user_id, parent_id, love_num, time, blog_id, reply_num
    from comment 
    where blog_id = #{blogID,jdbcType=INTEGER}
    order by time desc limit #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>
  <select id="selectAllByParentID" resultMap="BaseResultMap"  parameterType="java.lang.Integer">
    select id, comment, user_id, parent_id, love_num, time, blog_id, reply_num
    from comment 
    where id = #{parentID,jdbcType=INTEGER}
    order by time desc limit #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>
  <select id="selectAllByLove" resultMap="BaseResultMap"  parameterType="java.lang.Integer">
    select id, comment, user_id, parent_id, love_num, time, blog_id, reply_num
    from comment 
    where blog_id = #{blogID,jdbcType=INTEGER} limit 4
  </select>
</mapper>