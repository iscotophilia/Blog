<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isco.Blog.Mapper.CommentMapper">
	<resultMap id="BaseResultMap"
		type="com.isco.Blog.POJO.Comment">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="comment" property="comment" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="parent_id" property="parentId"
			jdbcType="INTEGER" />
		<result column="love_num" property="loveNum" jdbcType="INTEGER" />
		<result column="time" property="time" jdbcType="TIMESTAMP" />
		<result column="blog_id" property="blogId" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="BaseResultMapWhitUser"
		type="com.isco.Blog.ResultEntity.CommentUserEntity">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="comment" property="comment" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="parent_id" property="parentId"
			jdbcType="INTEGER" />
		<result column="love_num" property="loveNum" jdbcType="INTEGER" />
		<result column="time" property="time" jdbcType="TIMESTAMP" />
		<result column="blog_id" property="blogId" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="img" property="img" jdbcType="VARCHAR" />
		<result column="sign" property="sign" jdbcType="VARCHAR" />
	</resultMap>
	
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from comment
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.isco.Blog.POJO.Comment"
		useGeneratedKeys="true" keyProperty="id">
		insert into comment (comment,
		user_id, parent_id, time, blog_id
		)
		values
		(#{comment,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER},
		#{parentId,jdbcType=INTEGER},
		#{time,jdbcType=TIMESTAMP}, #{blogId,jdbcType=INTEGER}
		)
	</insert>
	<update id="updateByPrimaryKey"
		parameterType="com.isco.Blog.POJO.Comment">
		update comment
		<set>
			<if test="comment!=null and comment=''">
				comment = #{comment,jdbcType=VARCHAR},
			</if>
			<if test="loveNum!=null and loveNum!=''">
				love_num = #{loveNum,jdbcType=INTEGER}
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select id, comment, user_id, parent_id, love_num, time,
		blog_id
		from comment
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMapWhitUser">
		select comment.id, comment, user_id,
		parent_id, love_num, time, blog_id,name,img,sign
		from comment join user on comment.user_id=user.id where comment.id &gt; #{start} limit 20
	</select>
	<!-- 查看当前用户的评论 -->
	<select id="selectAllByUserID" resultMap="BaseResultMapWhitUser"
		parameterType="java.lang.Integer">
		select comment.id, comment, user_id, parent_id, love_num, time,
		blog_id, name,sign,img
		from comment,user
		where user_id =
		#{userID} and user_id=user.id and comment.id &gt; #{start} limit 10
	</select>
	
	<!-- 查看当前博客的第一层评论 -->
	<select id="selectAllByBlogID" resultMap="BaseResultMapWhitUser">
		select distinct comment.id, comment, user_id, love_num, time,
		blog_id,name,sign,img
		from comment,user
		where blog_id =
		#{blogID} and user_id=user.id and parent_id is null
		and comment.id &gt; #{start} limit 10
	</select>
	
	<!-- 查看当前博客的第二层评论 -->
	<select id="selectAllByParentID" resultMap="BaseResultMapWhitUser">
		select distinct comment.id, comment, user_id, love_num, time,
		blog_id,name,sign,img
		from comment,user
		where parent_id = #{parentID} and comment.id &gt; #{start} and user_id=user.id
		limit 10
	</select>
</mapper>